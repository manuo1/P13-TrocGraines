name: continuous integration

# ${{ secrets.XXXX }} are defined in github secrets :
# on your repositories -> Settings -> Secrets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
# #############################################################################
# Tests execution Job
# #############################################################################

  test:
    name: Tests execution Job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      ENVIRONMENT: 'development'
      SECRET_KEY: 'test_secret_key'
      DATABASES_NAME: 'test_database'
      DATABASES_USER: 'test_user'
      DATABASES_PASSWORD: 'test_password'

      EMAIL_HOST: 'smtp.mail.fr'
      EMAIL_HOST_USER: 'mail@mail.fr'
      EMAIL_HOST_PASSWORD: 'test_password'
      EMAIL_PORT: 123
      DEFAULT_FROM_EMAIL: 'mail@mail.fr'

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the data for postgreSQL
        env:
          POSTGRES_DB: 'test_database'
          POSTGRES_USER: 'test_user'
          POSTGRES_PASSWORD: 'test_password'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Map port 5432 on the Docker host to port 5432 on the nginx container
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # Install packages dependencies present in requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # Create django tables
    - name: Run migrations
      run: |
        python manage.py makemigrations authentication
        python manage.py makemigrations seeds
        python manage.py makemigrations exchange_messages
        python manage.py migrate
    # Collect djang staticss
    - name: Run collectstatic
      run: python manage.py collectstatic
      # next step to add firefox driver to system
      # download geckodriver extract and copy in geckodriver directory
      # delette tar.gz file
      # add geckodriver to system path
    - name: Get the Firefox driver and add it to the system paths
      run: |
        wget https://github.com/mozilla/geckodriver/releases/download/v0.28.0/geckodriver-v0.28.0-linux64.tar.gz
        mkdir geckodriver
        tar -xzf geckodriver-v0.28.0-linux64.tar.gz -C geckodriver
        rm geckodriver-v0.28.0-linux64.tar.gz
        export PATH=$PATH:$PWD/geckodriver
    - name: Run tests unit, integration and functionnal
      run: python manage.py test
